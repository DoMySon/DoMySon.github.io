<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Network on 薛定谔的BUG</title>
    <link>https://DoMySon.github.io/categories/Network/</link>
    <description>Recent content in Network on 薛定谔的BUG</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 09 Feb 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://DoMySon.github.io/categories/Network/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Http</title>
      <link>https://DoMySon.github.io/2020/02/Http/</link>
      <pubDate>Sun, 09 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://DoMySon.github.io/2020/02/Http/</guid>
      <description>&lt;h1 id=&#34;http-请求构成&#34;&gt;Http 请求构成&lt;/h1&gt;

&lt;h2 id=&#34;请求行&#34;&gt;请求行&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;请求行以一个方法符号开头，以空格分开，后面跟着请求的URI和协议的版本，格式如下：Method Request-URI HTTP-Version CRLF  其中 Method表示请求方法；Request-URI是一个统一资源标识符；HTTP-Version表示请求的HTTP协议版本；CRLF表示回车和换行（除了作为结尾的CRLF外，不允许出现单独的CR或LF字符）。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;Method&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Desc&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;GET&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;请求获取Request-URI所标识的资源&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;POST&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;在Request-URI所标识的资源后附加新的数据&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;HEAD&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;请求获取由Request-URI所标识的资源的响应消息报头&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;PUT&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;请求服务器存储一个资源，并用Request-URI作为其标识&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;DELETE&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;请求服务器删除Request-URI所标识的资源&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;TRACE&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;请求服务器回送收到的请求信息，主要用于测试或诊断&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;CONNECT&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;保留将来使用&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;OPTIONS&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;请求查询服务器的性能，或者查询与资源相关的选项和需求&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;POST&lt;/code&gt; 和 &lt;code&gt;GET&lt;/code&gt; 的区别:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;副作用：服务器上的资源做改变，如搜索是无副作用的，注册是副作用的。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;幂等：幂等指发送 M 和 N 次请求（两者不相同且都大于 1），服务器上资源的状态一致。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在规范的应用场景上说，Get 多用于无副作用，幂等的场景，例如搜索关键字。Post 多用于副作用，不幂等的场景，例如注册。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Get 请求能缓存，Post 不能&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Post 相对 Get 安全一点点，因为Get 请求都包含在 URL 里（当然你想写到 body 里也是可以的），且会被浏览器保存历史纪录。Post 不会，但是在抓包的情况下都是一样。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;URL有长度限制，会影响 Get 请求，但是这个长度限制是浏览器规定的，不是 RFC 规定的&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Post 支持更多的编码类型且不对数据类型限制&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>TLS</title>
      <link>https://DoMySon.github.io/2020/02/TLS/</link>
      <pubDate>Sun, 09 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://DoMySon.github.io/2020/02/TLS/</guid>
      <description>&lt;h1 id=&#34;简介&#34;&gt;简介&lt;/h1&gt;

&lt;p&gt;传输层安全性协议（Transport Layer Security），及其前身 &lt;code&gt;SSL3.0&lt;/code&gt; 之后安全套接层（Secure Sockets Layer，缩写作SSL）是一种安全协议，目的是为互联网通信提供安全及数据完整性保障。SSL包含记录层（Record Layer）和传输层，记录层协议确定传输层数据的封装格式。传输层安全协议使用X.509认证，之后利用&lt;code&gt;RSA&lt;/code&gt; 加密演算来对通信方做身份认证，之后交换对称密钥作为会谈密钥（Session key）。这个会谈密钥是用来将通信两方交换的数据做加密，保证两个应用间通信的保密性和可靠性，使客户与服务器应用之间的通信不被攻击者窃听。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>